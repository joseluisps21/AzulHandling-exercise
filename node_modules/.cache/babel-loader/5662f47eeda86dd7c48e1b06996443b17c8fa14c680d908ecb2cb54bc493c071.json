{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\n// Asegúrate de importar tu componente de alerta\n\nconst FlightsAPI = ({\n  searchDate,\n  searchText\n}) => {\n  _s();\n  const [apiData, setApiData] = useState([]);\n  const [showErrorAlert, setShowErrorAlert] = useState(false);\n  const currentTimeInSeconds = Math.floor(Date.now() / 1000);\n  const twoYearsAgo = currentTimeInSeconds - 2 * 365 * 24 * 60 * 60; // Hace 2 años\n  const twoYearsAgoPlusOneHour = twoYearsAgo + 3600; // Hace 2 años y 1 hora\n\n  const fetchData = async () => {\n    try {\n      const response = await axios.get('https://opensky-network.org/api/flights/arrival', {\n        params: {\n          airport: searchText || 'EDDF',\n          // le sumo 43200000 para que obtenga una hora en la que haya tráfico aéreo. usualmente a las 00:00 no hay tráfico aéreo\n          begin: searchDate ? Math.floor(new Date(searchDate).getTime() / 1000) + 43200 : twoYearsAgo,\n          end: searchDate ? Math.floor(new Date(searchDate).getTime() / 1000) + 3600 + 43200 : twoYearsAgoPlusOneHour\n        }\n      });\n      setApiData(response.data);\n      setShowErrorAlert(false); // Limpiar el estado de error si la solicitud es exitosa\n    } catch (error) {\n      console.error('Error fetching flight data:', error);\n      setShowErrorAlert(true); // Establecer el estado de showErrorAlert en true en caso de error\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, []); // Asegúrate de incluir los parámetros como dependencias para que se ejecute cuando cambien\n\n  return {\n    apiData,\n    fetchData,\n    showErrorAlert\n  };\n};\n_s(FlightsAPI, \"jsx8ajue6LfoTd7DpTmfBXjdp+U=\");\n_c = FlightsAPI;\nexport default FlightsAPI;\nvar _c;\n$RefreshReg$(_c, \"FlightsAPI\");","map":{"version":3,"names":["useState","useEffect","axios","FlightsAPI","searchDate","searchText","_s","apiData","setApiData","showErrorAlert","setShowErrorAlert","currentTimeInSeconds","Math","floor","Date","now","twoYearsAgo","twoYearsAgoPlusOneHour","fetchData","response","get","params","airport","begin","getTime","end","data","error","console","_c","$RefreshReg$"],"sources":["/Users/joseluisps21/Desktop/azultypescript/project/my-ts-app/src/api/flightsAPI.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport CustomAlert from '../components/customAlert'; // Asegúrate de importar tu componente de alerta\n\nexport interface FlightData {\n    icao24: string;\n    firstSeen: number;\n    estDepartureAirport: string;\n    lastSeen: number;\n    estArrivalAirport: string;\n    callsign: string;\n    estDepartureAirportHorizDistance: number;\n    estDepartureAirportVertDistance: number;\n    estArrivalAirportHorizDistance: number;\n    estArrivalAirportVertDistance: number;\n    departureAirportCandidatesCount: number;\n    arrivalAirportCandidatesCount: number;\n  }\n\ninterface FlightsAPIProps {\n  searchDate?: string;\n  searchText?: string;\n}\n\nconst FlightsAPI = ({ searchDate, searchText }: FlightsAPIProps): { apiData: FlightData[]; fetchData: () => Promise<void>; showErrorAlert: boolean } => {\n  const [apiData, setApiData] = useState<FlightData[]>([]);\n  const [showErrorAlert, setShowErrorAlert] = useState(false);\n\n  const currentTimeInSeconds = Math.floor(Date.now() / 1000);\n  const twoYearsAgo = currentTimeInSeconds - 2 * 365 * 24 * 60 * 60; // Hace 2 años\n  const twoYearsAgoPlusOneHour = twoYearsAgo + 3600; // Hace 2 años y 1 hora\n\n  const fetchData = async () => {\n    try {\n      const response = await axios.get(\n        'https://opensky-network.org/api/flights/arrival',\n        {\n          params: {\n            airport: searchText || 'EDDF',\n            // le sumo 43200000 para que obtenga una hora en la que haya tráfico aéreo. usualmente a las 00:00 no hay tráfico aéreo\n            begin: searchDate ? Math.floor(new Date(searchDate).getTime() / 1000) + 43200 : twoYearsAgo,\n            end: searchDate ? Math.floor(new Date(searchDate).getTime() / 1000) + 3600 + 43200 : twoYearsAgoPlusOneHour,\n          },\n        }\n      );\n\n      setApiData(response.data);\n      setShowErrorAlert(false); // Limpiar el estado de error si la solicitud es exitosa\n    } catch (error) {\n      console.error('Error fetching flight data:', error);\n      setShowErrorAlert(true); // Establecer el estado de showErrorAlert en true en caso de error\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []); // Asegúrate de incluir los parámetros como dependencias para que se ejecute cuando cambien\n\n  return { apiData, fetchData, showErrorAlert };\n};\n\nexport default FlightsAPI;\n\n\n\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAC4B;;AAsBrD,MAAMC,UAAU,GAAGA,CAAC;EAAEC,UAAU;EAAEC;AAA4B,CAAC,KAAyF;EAAAC,EAAA;EACtJ,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAe,EAAE,CAAC;EACxD,MAAM,CAACS,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAE3D,MAAMW,oBAAoB,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;EAC1D,MAAMC,WAAW,GAAGL,oBAAoB,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;EACnE,MAAMM,sBAAsB,GAAGD,WAAW,GAAG,IAAI,CAAC,CAAC;;EAEnD,MAAME,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,GAAG,CAC9B,iDAAiD,EACjD;QACEC,MAAM,EAAE;UACNC,OAAO,EAAEjB,UAAU,IAAI,MAAM;UAC7B;UACAkB,KAAK,EAAEnB,UAAU,GAAGQ,IAAI,CAACC,KAAK,CAAC,IAAIC,IAAI,CAACV,UAAU,CAAC,CAACoB,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,KAAK,GAAGR,WAAW;UAC3FS,GAAG,EAAErB,UAAU,GAAGQ,IAAI,CAACC,KAAK,CAAC,IAAIC,IAAI,CAACV,UAAU,CAAC,CAACoB,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,GAAG,KAAK,GAAGP;QACvF;MACF,CACF,CAAC;MAEDT,UAAU,CAACW,QAAQ,CAACO,IAAI,CAAC;MACzBhB,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC;IAC5B,CAAC,CAAC,OAAOiB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnDjB,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC;IAC3B;EACF,CAAC;EAEDT,SAAS,CAAC,MAAM;IACdiB,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,OAAO;IAAEX,OAAO;IAAEW,SAAS;IAAET;EAAe,CAAC;AAC/C,CAAC;AAACH,EAAA,CAnCIH,UAAU;AAAA0B,EAAA,GAAV1B,UAAU;AAqChB,eAAeA,UAAU;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}