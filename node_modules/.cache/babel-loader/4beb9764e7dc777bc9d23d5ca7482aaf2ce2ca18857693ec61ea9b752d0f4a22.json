{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nconst FlightsAPI = () => {\n  _s();\n  const [apiData, setApiData] = useState([]);\n  const currentTimeInSeconds = Math.floor(Date.now() / 1000);\n  const twoYearsAgo = currentTimeInSeconds - 2 * 365 * 24 * 60 * 60; // Hace 2 años\n  const twoYearsAgoPlusOneHour = twoYearsAgo + 3600; // Hace 2 años y 1 hora\n\n  const fetchData = async () => {\n    try {\n      const response = await axios.get('https://opensky-network.org/api/flights/arrival', {\n        params: {\n          airport: 'EDDF',\n          // Cambia al código del aeropuerto que desees\n          begin: twoYearsAgo,\n          end: twoYearsAgoPlusOneHour\n        }\n      });\n      setApiData(response.data);\n    } catch (error) {\n      console.error('Error fetching flight data:', error);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return {\n    apiData,\n    fetchData\n  };\n};\n_s(FlightsAPI, \"XS4vxfgOwg6YXXgDtcewhgQYniU=\");\n_c = FlightsAPI;\nexport default FlightsAPI;\nvar _c;\n$RefreshReg$(_c, \"FlightsAPI\");","map":{"version":3,"names":["useState","useEffect","axios","FlightsAPI","_s","apiData","setApiData","currentTimeInSeconds","Math","floor","Date","now","twoYearsAgo","twoYearsAgoPlusOneHour","fetchData","response","get","params","airport","begin","end","data","error","console","_c","$RefreshReg$"],"sources":["/Users/joseluisps21/Desktop/azultypescript/project/my-ts-app/src/api/flightsAPI.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\ninterface FlightData {\n    icao24: string;\n    firstSeen: number;\n    estDepartureAirport: string;\n    lastSeen: number;\n    estArrivalAirport: string;\n    callsign: string;\n    estDepartureAirportHorizDistance: number;\n    estDepartureAirportVertDistance: number;\n    estArrivalAirportHorizDistance: number;\n    estArrivalAirportVertDistance: number;\n    departureAirportCandidatesCount: number;\n    arrivalAirportCandidatesCount: number;\n}\n\nconst FlightsAPI = (): { apiData: FlightData[]; fetchData: () => void } => {\n    const [apiData, setApiData] = useState<FlightData[]>([]);\n    const currentTimeInSeconds = Math.floor(Date.now() / 1000);\n    const twoYearsAgo = currentTimeInSeconds - 2 * 365 * 24 * 60 * 60; // Hace 2 años\n    const twoYearsAgoPlusOneHour = twoYearsAgo + 3600; // Hace 2 años y 1 hora\n\n    const fetchData = async () => {\n        try {\n            const response = await axios.get(\n                'https://opensky-network.org/api/flights/arrival',\n                {\n                    params: {\n                        airport: 'EDDF', // Cambia al código del aeropuerto que desees\n                        begin: twoYearsAgo,\n                        end: twoYearsAgoPlusOneHour,\n                    },\n                }\n            );\n\n            setApiData(response.data);\n        } catch (error) {\n            console.error('Error fetching flight data:', error);\n        }\n    };\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    return { apiData, fetchData };\n};\n\nexport default FlightsAPI;\n\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAiBzB,MAAMC,UAAU,GAAGA,CAAA,KAAwD;EAAAC,EAAA;EACvE,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAe,EAAE,CAAC;EACxD,MAAMO,oBAAoB,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;EAC1D,MAAMC,WAAW,GAAGL,oBAAoB,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;EACnE,MAAMM,sBAAsB,GAAGD,WAAW,GAAG,IAAI,CAAC,CAAC;;EAEnD,MAAME,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAC5B,iDAAiD,EACjD;QACIC,MAAM,EAAE;UACJC,OAAO,EAAE,MAAM;UAAE;UACjBC,KAAK,EAAEP,WAAW;UAClBQ,GAAG,EAAEP;QACT;MACJ,CACJ,CAAC;MAEDP,UAAU,CAACS,QAAQ,CAACM,IAAI,CAAC;IAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACvD;EACJ,CAAC;EAEDrB,SAAS,CAAC,MAAM;IACZa,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAET,OAAO;IAAES;EAAU,CAAC;AACjC,CAAC;AAACV,EAAA,CA9BID,UAAU;AAAAqB,EAAA,GAAVrB,UAAU;AAgChB,eAAeA,UAAU;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}