{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nconst FlightsAPI = ({\n  searchDate,\n  searchText\n}) => {\n  _s();\n  const [apiData, setApiData] = useState([]);\n  const currentTimeInSeconds = Math.floor(Date.now() / 1000);\n  const twoYearsAgo = currentTimeInSeconds - 2 * 365 * 24 * 60 * 60; // Hace 2 años\n  const twoYearsAgoPlusOneHour = twoYearsAgo + 3600; // Hace 2 años y 1 hora\n\n  const fetchData = async () => {\n    try {\n      const response = await axios.get('https://opensky-network.org/api/flights/arrival', {\n        params: {\n          airport: searchText || 'EDDF',\n          //le sumo 43200000 para que obtenga una hora en la que haya tráfico aéreo. usualmente a las 00:00 no hay tráfico aéreo\n          begin: searchDate ? Math.floor(new Date(searchDate).getTime() / 1000) + 43200000 : twoYearsAgo,\n          end: searchDate ? Math.floor(new Date(searchDate).getTime() / 1000) + 3600 + 43200000 : twoYearsAgoPlusOneHour\n        }\n      });\n      setApiData(response.data);\n    } catch (error) {\n      console.error('Error fetching flight data:', error);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, []); // Asegúrate de incluir los parámetros como dependencias para que se ejecute cuando cambien\n\n  return {\n    apiData,\n    fetchData\n  };\n};\n_s(FlightsAPI, \"XS4vxfgOwg6YXXgDtcewhgQYniU=\");\n_c = FlightsAPI;\nexport default FlightsAPI;\nvar _c;\n$RefreshReg$(_c, \"FlightsAPI\");","map":{"version":3,"names":["useState","useEffect","axios","FlightsAPI","searchDate","searchText","_s","apiData","setApiData","currentTimeInSeconds","Math","floor","Date","now","twoYearsAgo","twoYearsAgoPlusOneHour","fetchData","response","get","params","airport","begin","getTime","end","data","error","console","_c","$RefreshReg$"],"sources":["/Users/joseluisps21/Desktop/azultypescript/project/my-ts-app/src/api/flightsAPI.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\ninterface FlightData {\n  icao24: string;\n  firstSeen: number;\n  estDepartureAirport: string;\n  lastSeen: number;\n  estArrivalAirport: string;\n  callsign: string;\n  estDepartureAirportHorizDistance: number;\n  estDepartureAirportVertDistance: number;\n  estArrivalAirportHorizDistance: number;\n  estArrivalAirportVertDistance: number;\n  departureAirportCandidatesCount: number;\n  arrivalAirportCandidatesCount: number;\n}\n\ninterface FlightsAPIProps {\n  searchDate?: string;\n  searchText?: string;\n}\n\nconst FlightsAPI = ({ searchDate, searchText }: FlightsAPIProps): { apiData: FlightData[]; fetchData: () => void } => {\n  const [apiData, setApiData] = useState<FlightData[]>([]);\n  const currentTimeInSeconds = Math.floor(Date.now() / 1000);\n  const twoYearsAgo = currentTimeInSeconds - 2 * 365 * 24 * 60 * 60; // Hace 2 años\n  const twoYearsAgoPlusOneHour = twoYearsAgo + 3600; // Hace 2 años y 1 hora\n\n  const fetchData = async () => {\n    try {\n      const response = await axios.get(\n        'https://opensky-network.org/api/flights/arrival',\n        {\n          params: {\n            airport: searchText || 'EDDF',\n            //le sumo 43200000 para que obtenga una hora en la que haya tráfico aéreo. usualmente a las 00:00 no hay tráfico aéreo\n            begin: searchDate ? Math.floor(new Date(searchDate).getTime() / 1000) + 43200000 : twoYearsAgo,\n            end: searchDate ? Math.floor(new Date(searchDate).getTime() / 1000) + 3600 + 43200000 : twoYearsAgoPlusOneHour,\n          },\n        }\n      );\n\n      setApiData(response.data);\n    } catch (error) {\n      console.error('Error fetching flight data:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []); // Asegúrate de incluir los parámetros como dependencias para que se ejecute cuando cambien\n\n  return { apiData, fetchData };\n};\n\nexport default FlightsAPI;\n\n\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAsBzB,MAAMC,UAAU,GAAGA,CAAC;EAAEC,UAAU;EAAEC;AAA4B,CAAC,KAAuD;EAAAC,EAAA;EACpH,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAe,EAAE,CAAC;EACxD,MAAMS,oBAAoB,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;EAC1D,MAAMC,WAAW,GAAGL,oBAAoB,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;EACnE,MAAMM,sBAAsB,GAAGD,WAAW,GAAG,IAAI,CAAC,CAAC;;EAEnD,MAAME,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAC9B,iDAAiD,EACjD;QACEC,MAAM,EAAE;UACNC,OAAO,EAAEf,UAAU,IAAI,MAAM;UAC7B;UACAgB,KAAK,EAAEjB,UAAU,GAAGM,IAAI,CAACC,KAAK,CAAC,IAAIC,IAAI,CAACR,UAAU,CAAC,CAACkB,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,QAAQ,GAAGR,WAAW;UAC9FS,GAAG,EAAEnB,UAAU,GAAGM,IAAI,CAACC,KAAK,CAAC,IAAIC,IAAI,CAACR,UAAU,CAAC,CAACkB,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,GAAG,QAAQ,GAAGP;QAC1F;MACF,CACF,CAAC;MAEDP,UAAU,CAACS,QAAQ,CAACO,IAAI,CAAC;IAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD;EACF,CAAC;EAEDxB,SAAS,CAAC,MAAM;IACde,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,OAAO;IAAET,OAAO;IAAES;EAAU,CAAC;AAC/B,CAAC;AAACV,EAAA,CA/BIH,UAAU;AAAAwB,EAAA,GAAVxB,UAAU;AAiChB,eAAeA,UAAU;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}